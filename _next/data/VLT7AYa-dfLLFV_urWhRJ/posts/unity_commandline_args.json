{"pageProps":{"post":{"title":"【Unity】 コマンドライン引数を扱う","date":"2023-06-19","slug":"unity_commandline_args","content":"<h2 id=\"背景\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#背景\"><span class=\"icon icon-link\"></span></a>背景</h2>\n<p>Unity を使って簡単な Windows デスクトップアプリを作っていたとき、アプリ実行時にコマンドライン引き数で userId などの情報を受け取る必要があった。<br>\nまた、開発時にビルド前に Unity Editor でテストする際の方法も調べたので、自分メモ用にまとめておく。</p>\n<h2 id=\"要約\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#要約\"><span class=\"icon icon-link\"></span></a>要約</h2>\n<ul>\n<li><code>System.Environment.GetCommandLineArgs();</code> でスペース区切りで入力したコマンドライン引数の文字列配列を取得できる</li>\n<li>引き数で指定する記述方法に応じて、リストからどのように取得するか処理をつくる</li>\n<li>Editor で実行する場合、Unity Hub の <code>…</code> から設定できる</li>\n</ul>\n<h2 id=\"方法\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#方法\"><span class=\"icon icon-link\"></span></a>方法</h2>\n<h3 id=\"unityeditor-でコマンドライン引き数を設定する\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#unityeditor-でコマンドライン引き数を設定する\"><span class=\"icon icon-link\"></span></a>UnityEditor でコマンドライン引き数を設定する</h3>\n<p>まず、テストできるように Editor でコマンドライン引き数を設定をする。<br>\nProject を起動するとき、あらかじめ<code>Unity Hub</code> の <code>プロジェクト</code> タブで起動するプロジェクトの <code>…</code> マークから、<code>コマンドライン引き数を加える</code> をクリックすると入力 window が開くので、ここに入力する<br>\n<img src=\"/assets/blog/dynamic-routing/unity_commandline_args/1.png\" alt=\"\">1</p>\n<h3 id=\"スクリプトからコマンドライン引き数を受け取る\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#スクリプトからコマンドライン引き数を受け取る\"><span class=\"icon icon-link\"></span></a>スクリプトからコマンドライン引き数を受け取る</h3>\n<p><code>Environment.GetCommandLineArgs()</code> で全てのコマンドライン引数を受け取ることができる。</p>\n<pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetCommandLineArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nDebug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Editor側で a b c d と設定していた場合</span>\n<span class=\"token comment\">// Console: a, b, c, d</span>\n</code></pre>\n<p>自分の作っていたデスクトップアプリでは、コマンドライン引数の順に依存せず、引数名に対する値を受け取りたかったので、下記のようにした。</p>\n<ul>\n<li>コマンドライン引数</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">-userId xxxxx -password abcDEF1223\n</code></pre>\n<ul>\n<li>スクリプト側</li>\n</ul>\n<pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetCommandLineArg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> arg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetCommandLineArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> args<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> arg <span class=\"token operator\">&#x26;&#x26;</span> args<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">></span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> args<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> userId <span class=\"token operator\">=</span> <span class=\"token function\">GetCommandLineArgs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-userId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> password <span class=\"token operator\">=</span> <span class=\"token function\">GetCommandLineArgs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"参考\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#参考\"><span class=\"icon icon-link\"></span></a>参考</h2>\n<p><a href=\"https://learn.microsoft.com/ja-jp/dotnet/api/system.environment.getcommandlineargs?view=net-7.0\">https://learn.microsoft.com/ja-jp/dotnet/api/system.environment.getcommandlineargs?view=net-7.0</a></p>","ogImage":{"url":"/assets/blog/dynamic-routing/cover.jpg"},"coverImage":"/assets/blog/dynamic-routing/cover.jpg","excerpt":"アプリ実行時とEditorでコマンドライン引数を扱う方法","tags":["Unity"]}},"__N_SSG":true}